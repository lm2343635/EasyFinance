<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码
		连接池最大连接数、最小连接数、初始连接数等参数         自动建表createDatabaseIfNotExist=true-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://127.0.0.1:3306/easyfinance?characterEncoding=utf-8"    
		p:user="root"
		p:password="123456"
		p:maxPoolSize="40"
		p:minPoolSize="1"
		p:initialPoolSize="1"
		p:maxIdleTime="20"/> 

	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>edu/kit/ActMgr/domain/User.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/AccountBook.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Classification.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Shop.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Account.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Template.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Record.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Transfer.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/Photo.hbm.xml</value>		
				<value>edu/kit/ActMgr/domain/Icon.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/AccountHistory.hbm.xml</value>
				<value>edu/kit/ActMgr/domain/SynchronizationHistory.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表
				是否生成SQL语句等 	-->
			<value>
			hibernate.dialect=org.hibernate.dialect.MySQLDialect
			hibernate.hbm2ddl.auto=update
			#hibernate.show_sql=true
			#hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager" class=
		"org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>

	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配empManager和mgrManager
			两个Bean的所有方法的执行 -->
		<aop:pointcut id="leePointcut" expression="bean(empManager)"/>
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice"  pointcut-ref="leePointcut"/>
	</aop:config>

	<!-- 定义业服务层模板 -->
	<bean id="managerTemplate" class="edu.kit.ActMgr.service.util.ManagerTemplate">
		<property name="userDao" ref="userDao"/>
		<property name="accountBookDao" ref="accountBookDao"/>
		<property name="classificationDao" ref="classificationDao"/>
		<property name="shopDao" ref="shopDao"/>
		<property name="accountDao" ref="accountDao"/>
		<property name="templateDao" ref="templateDao"/>
		<property name="recordDao" ref="recordDao"/>
		<property name="transferDao" ref="transferDao"/>
		<property name="iconDao" ref="iconDao"/>
		<property name="photoDao" ref="photoDao"/>
		<property name="accountHistoryDao" ref="accountHistoryDao"/>
		<property name="synchronizationHistoryDao" ref="synchronizationHistoryDao"/>
	</bean>	
	<!-- 定义业服务层映射 -->
	<bean id="service" class="edu.kit.ActMgr.service.util.Service">
		<property name="accountBookManager" ref="accountBookManager"/>
		<property name="accountHistoryManager" ref="accountHistoryManager"/>
		<property name="accountManager" ref="accountManager"/>
		<property name="classificationManager" ref="classificationManager"/>
		<property name="exchangeRateManager" ref="exchangeRateManager"/>
		<property name="photoManager" ref="photoManager"/>
		<property name="reportManager" ref="reportManager"/>
		<property name="setManager" ref="setManager"/>
		<property name="shopManager" ref="shopManager"/>
		<property name="tallyManager" ref="tallyManager"/>
		<property name="userManager" ref="userManager"/>
	</bean>	
	<bean id="daoManager" class="edu.kit.ActMgr.service.util.DaoManager" parent="managerTemplate"/>	
	<!-- 定义业务逻辑组件 -->
	<bean id="userManager" class="edu.kit.ActMgr.service.impl.UserManagerImpl" parent="managerTemplate"/>
	<bean id="setManager" class="edu.kit.ActMgr.service.impl.SetManagerImpl" parent="managerTemplate"/>
	<bean id="classificationManager" class="edu.kit.ActMgr.service.impl.ClassificationManagerImpl" parent="managerTemplate"/>	
	<bean id="accountBookManager" class="edu.kit.ActMgr.service.impl.AccountBookManagerImpl" parent="managerTemplate"/>	
	<bean id="accountHistoryManager" class="edu.kit.ActMgr.service.impl.AccountHistoryManagerImpl" parent="managerTemplate"/>	
	<bean id="accountManager" class="edu.kit.ActMgr.service.impl.AccountManagerImpl" parent="managerTemplate"/>
	<bean id="tallyManager" class="edu.kit.ActMgr.service.impl.TallyManagerImpl" parent="managerTemplate">
		<property name="accountHistoryManager" ref="accountHistoryManager"></property>
	</bean>
	<bean id="shopManager" class="edu.kit.ActMgr.service.impl.ShopManagerImpl" parent="managerTemplate"/>	
	<bean id="templateManager" class="edu.kit.ActMgr.service.impl.TemplateManagerImpl" parent="managerTemplate"/>	
	<bean id="reportManager" class="edu.kit.ActMgr.service.impl.ReportManagerImpl" parent="managerTemplate"/>	
	<bean id="exchangeRateManager" class="edu.kit.ActMgr.service.impl.ExchangeRateManagerImpl"/>
	<bean id="photoManager" class="edu.kit.ActMgr.service.impl.PhotoManagerImpl" parent="managerTemplate"/>
</beans>